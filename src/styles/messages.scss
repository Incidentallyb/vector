$timeToWait: 2s;

.message-list {
  list-style: none;
  li {
    @include clearfix;
    &:last-child {
      /*
        If multiple messages are triggered at the same time, the dom will contain typing-indicators
        for both messages. Only show the first one.
      */
      .typing-indicator {
        display: none !important; 
        animation: none !important; 
      }
    }
  }
}

.typing-indicator {
  margin: 0 auto;
  position: relative;
  display: flex;
  span {
    height: 15px;
    width: 15px;
    margin: 0 2px;
    background-color: var(--white);
    display: block;
    border-radius: 50%;
    opacity: 0.4;
    &:nth-child(1)
    {
        animation: 1s blink infinite .3333s;
    }
    &:nth-child(2)
    {
        animation: 1s blink infinite .6666s;
    }
    &:nth-child(3)
    {
        animation: 1s blink infinite .9999s;
    }
  }
  animation: hide-outof-view 0.1s ;
  animation-fill-mode: forwards;
  animation-delay: $timeToWait;
}

@keyframes blink
{
    50%
    {
        opacity: 1;
        transform: scale(1.2);
    }
}
@keyframes hide-outof-view {
  100% {
      opacity: 0;
  }
}

.message {
  border-radius: 4px;
  background-color: var(--white);
  position: relative;
  animation: slide-into-view 0.5s ease-out;
  animation-fill-mode: backwards;
  &.score {
    animation: explode-into-view 1s ease-in;
    animation-fill-mode: backwards;
    .results {
      display:flex;
      flex-direction: row;
      margin-top:0.5em;
      border-radius:0.5em;
      background-color:var(--purple);
      color:var(--white);
      padding:1em;
      div {
        flex-grow:1;
        text-align: center;
      }
    }
  }

  p:last-of-type {
    margin-bottom: 0;
  }
}


@media (max-width: 767px) {
  .message {
    &.score {
      .results {
        flex-direction: column;
        div {
          border-bottom: 2px solid var(--white);
          padding-bottom:0.25em;
          margin-bottom:0.25em;
        }
        div:last-of-type {
          border-bottom:none;
        }
      }
    }
  }
}

li.already-seen { 
  .typing-indicator {
    display:none;
  }
  .message {
    animation: none;
  }
}

.message-list .message:nth-child(2n) {
  animation-delay: #{$timeToWait};
}
.message-list .message:nth-child(3n) {
  animation-delay: #{$timeToWait + 1};
}
.message-list .message:nth-child(4n) {
  animation-delay: #{$timeToWait + 2};
}

/*
  If there are two messages that have been triggered, and both are not-seen, 
  then we need to delay the display of the second block of messages so they appear after the first <li> block.
*/
li.not-seen + li.not-seen {
  .message {
    animation-delay: #{$timeToWait};
  }
  .message:nth-child(2n) {
    animation-delay: #{$timeToWait + 2};
  }
  .message:nth-child(3n) {
    animation-delay: #{$timeToWait + 3};
  }
  .message:nth-child(4n) {
    animation-delay: #{$timeToWait + 4};
  }
}

@keyframes slide-into-view {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes explode-into-view {
  0% {
    opacity: 0;
    transform: scale(0.5, 0.5);
  }
  70% {
    opacity: .8;
    transform: scale(1.2, 1.2);
  }
  80% {
    transform: scale(.9, .9);
  }
  90% {
    transform: scale(1.1, 1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1, 1);
  }
}

.message-from {
  font-size: 0.8rem;
  font-weight: 700;
  text-transform: uppercase;
}

.al {
  border-top-left-radius: 0;

  &:after {
    content: '';
    position: absolute;
    border-right: 1rem solid var(--white);
    border-bottom: 1rem solid transparent;
    display: block;
    width: 0;
    z-index: 1;
    left: -1rem;
    top: 0;
  }
}

.player {
  border-top-right-radius: 0;

  &:after {
    content: '';
    position: absolute;
    border-left: 1rem solid var(--white);
    border-bottom: 1rem solid transparent;
    display: block;
    width: 0;
    z-index: 1;
    right: -1rem;
    top: 0;
  }
}

.choice-button {
  display: block;
  margin-top: 0.5rem;
  min-width: 75%;
  text-align: left;
  &:not(.disabled):not(.active):hover {
    margin-left: 5px;
    &:before {
      content: '>';
    }
    &:after {
      content: '<';
    }
  }
  &.disabled {
    cursor: not-allowed;
    background-color: var(--choicebutton-disabled);
  }
  &.active {
    background-color: var(--choicebutton-selected);
    border-color: var(--choicebutton-selected);
    color: var(--white);
    cursor: not-allowed !important;
  }
  transition: all 0.5s;
  transition: margin-left 0.2s;
}

.checkbox-button {
  display: block;
  margin-top: 0.5rem;
  min-width: 75%;
  text-align: left;
  &:not(.disabled):not(.active):hover {
    background-color: var(--choicebutton-selected);
  }
  &.disabled {
    cursor: not-allowed;
    background-color: var(--choicebutton-disabled);
  }
  &.active {
    background-color: var(--choicebutton-selected);
    border-color: var(--choicebutton-selected);
    color: var(--white);
    &:before {
      content: '+';
    }
  }
  transition: all 0.5s;
  span {
    font-size: 1.2em;
    font-weight: 700;
    display: block;
  }
  span+span {
    font-size: 1em;
    font-weight: 500;
  }
}

/* Hide all score messages in li that have siblings of same depth */
li.triggers-2 ~ li.triggers-2,
li.triggers-4 ~ li.triggers-4,
li.triggers-5 ~ li.triggers-5 {
  .score {
    display:none;
  }
}

.confetti {
  width: 15px;
  height: 15px;
  background-color: #f2d74e;
  position: absolute;
  left: 50%;
  animation: confetti 5s ease-in-out #{$timeToWait} 3;
  transform-origin: left top;
  z-index:10;
  opacity: 0; 
}

li.already-seen .confetti { 
  animation:none;
  display:none;
}
.confetti:nth-child(1) {
  background-color: #f2d74e; left: 10%; animation-delay: 0;
}
.confetti:nth-child(2) {
  background-color: #95c3de; left: 20%; animation-delay: -5s;
}
.confetti:nth-child(3) {
  background-color: #ff9a91; left: 30%; animation-delay: -3s;
}
.confetti:nth-child(4) {
  background-color: #f2d74e; left: 40%; animation-delay: -2.5s;
}
.confetti:nth-child(5) {
  background-color: #95c3de; left: 50%; animation-delay: -4s;
}
.confetti:nth-child(6) {
  background-color: #ff9a91; left: 60%; animation-delay: -6s;
}
.confetti:nth-child(7) {
  background-color: #f2d74e; left: 70%; animation-delay: -1.5s;
}
.confetti:nth-child(8) {
  background-color: #95c3de; left: 80%; animation-delay: -2s;
}
.confetti:nth-child(9) {
  background-color: #ff9a91; left: 90%; animation-delay: -3.5s;
}
.confetti:nth-child(10) {
  background-color: #f2d74e; left: 100%; animation-delay: -2.5s;
}
@keyframes confetti {
  0% { transform: rotateZ(15deg) rotateY(0deg) translate(0,0); }
  5% {  opacity: 1; }
  25% { transform: rotateZ(5deg) rotateY(360deg) translate(-5vw,10vh); }
  50% { transform: rotateZ(15deg) rotateY(720deg) translate(5vw,30vh); }
  75% { transform: rotateZ(5deg) rotateY(1080deg) translate(-10vw,40vh); }
  100% { transform: rotateZ(15deg) rotateY(1440deg) translate(10vw,55vh); opacity: 0; }
}